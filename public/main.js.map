{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/services/auth-guard.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/route-gaurd.service.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/services/validate.service.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { AuthGuardService } from '../../services/auth-guard.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(public authGuard: AuthGuardService) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"jumbotron text-center\">\n  <h1>MEAN Authentication App</h1>\n  <p class=\"lead\">\n    Welcome to our custom MEAN Authentication application built from scratch\n  </p>\n  <div *ngIf=\"!authGuard.displayFunc()\">\n    <a class=\"btn btn-primary mr-4\" [routerLink]=\"['/register']\">Register</a>\n    <a class=\"btn btn-dark mr-4\" [routerLink]=\"['/login']\">Login</a>\n  </div>\n  <div *ngIf=\"authGuard.displayFunc()\">\n    <a class=\"btn btn-primary mr-4\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n    <a class=\"btn btn-dark mr-4\" [routerLink]=\"['/profile']\">Profile</a>\n  </div>\n</div>\n\n<div class=\"container-fluid text-center row\">\n  <div class=\"col-md-4\">\n    <h3>Express Backend</h3>\n    <p>\n      A rock solid Node.js/Express server using Mongoose to organize models and\n      query a MongoDB database\n    </p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>Angular CLI</h3>\n    <p>\n      Angular-CLI to generate components, services and more. Local dev server\n      and easy compilation\n    </p>\n  </div>\n  <div class=\"col-md-4\">\n    <h3>JWT Tokens</h3>\n    <p>\n      Full featured authentication using JSON Web Tokens. Login and store user\n      data\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user: object;\n  constructor(private auth: AuthService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.auth.getProfile().subscribe(\n      (profile) => {\n        this.user = profile.user;\n        // console.log(this.user);\n      },\n      (err) => {\n        console.log(err);\n        return false;\n      }\n    );\n  }\n}\n","<div *ngIf=\"user\" class=\"container\">\n  <h2>{{ user?.name }}</h2>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\">Username: {{ user?.username }}</li>\n    <li class=\"list-group-item\">Email: {{ user?.email }}</li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <h2>Dashboard</h2>\n  <p>Welcome to your dashboard</p>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuardService {\n  token: any;\n  display: boolean;\n  constructor() {}\n\n  // tslint:disable-next-line:typedef\n  loadToken() {\n    this.token = localStorage.getItem('id_token');\n    // console.log(this.authToken);\n  }\n\n  // tslint:disable-next-line:typedef\n  authenticateDisplay() {\n    this.loadToken();\n    return !!this.token;\n  }\n\n  // tslint:disable-next-line:typedef\n  displayFunc() {\n    if (this.authenticateDisplay() === true) {\n      return (this.display = true);\n    } else {\n      return (this.display = false);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'client';\n}\n","<app-navbar></app-navbar>\n<flash-messages class=\"container-fluid\"></flash-messages>\n<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthGuardService } from './auth-guard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class RouteGuard implements CanActivate {\n  constructor(private router: Router, private authGuard: AuthGuardService) {}\n  // tslint:disable-next-line:typedef\n  canActivate(): any {\n    if (this.authGuard.authenticateDisplay()) {\n      return true;\n    } else {\n      this.router.navigate(['login']);\n      return false;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { FlashMessagesService } from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  username: string;\n  password: string;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private flash: FlashMessagesService\n  ) {}\n\n  ngOnInit(): void {}\n  onSubmit(): any {\n    const user = {\n      username: this.username,\n      password: this.password,\n    };\n    this.auth.loginUser(user).subscribe((data) => {\n      // console.log(data);\n      if (data.success) {\n        this.auth.storeUserData(data.token, data.user);\n        this.flash.show('you are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 2000,\n        });\n        this.router.navigate(['profile']);\n      } else {\n        this.flash.show(data.msg, { cssClass: 'alert-danger', timeout: 3000 });\n      }\n    });\n  }\n}\n","<div class=\"container row-cols-2 m-4\">\n  <form (submit)=\"onSubmit()\" #loginForm=\"ngForm\">\n    <fieldset>\n      <legend>Login</legend>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          [(ngModel)]=\"username\"\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          class=\"form-control\"\n          placeholder=\"username\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          [(ngModel)]=\"password\"\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"password\"\n        />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Log In</button>\n    </fieldset>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  username: string;\n  email: string;\n  password: string;\n\n  constructor(\n    private validate: ValidateService,\n    private flashMessage: FlashMessagesService,\n    private auth: AuthService,\n    private route: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  // tslint:disable-next-line:typedef\n  onSubmit(): any {\n    const user = {\n      name: this.name,\n      username: this.username,\n      email: this.email,\n      password: this.password,\n    };\n    // Register Field\n    if (!this.validate.validateRegister(user)) {\n      this.flashMessage.show('Please fill all the Field', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      // console.log(user);\n      return false;\n    }\n    // Validate email\n    if (!this.validate.validateEmail(user.email)) {\n      this.flashMessage.show('invalid email', {\n        cssClass: 'alert-danger',\n        timeout: 3000,\n      });\n      return false;\n    }\n\n    // Register\n    this.auth.registerUser(user).subscribe((data) => {\n      // console.log(data);\n      // tslint:disable-next-line:triple-equals\n      if (data.success) {\n        // the value data.success is from the server\n        this.flashMessage.show('Successfully Register', {\n          cssClass: 'alert-success',\n          timeout: 3000,\n        });\n        this.route.navigate(['/login']);\n      } else {\n        this.flashMessage.show('Something went Wrong', {\n          cssClass: 'alert-danger',\n          timeout: 3000,\n        });\n        this.route.navigate(['/register']);\n      }\n    });\n  }\n}\n","<div class=\"container row-cols-2 m-4\">\n  <form (submit)=\"onSubmit()\" #registerForm=\"ngForm\">\n    <fieldset>\n      <legend>Register</legend>\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input\n          [(ngModel)]=\"name\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          class=\"form-control\"\n          placeholder=\"name\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input\n          [(ngModel)]=\"username\"\n          type=\"text\"\n          name=\"username\"\n          id=\"username\"\n          class=\"form-control\"\n          placeholder=\"username\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"E-mail\">E-mail</label>\n        <input\n          [(ngModel)]=\"email\"\n          type=\"text\"\n          name=\"E-mail\"\n          id=\"E-mail\"\n          class=\"form-control\"\n          placeholder=\"E-mail\"\n          aria-describedby=\"helpId\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input\n          [(ngModel)]=\"password\"\n          type=\"password\"\n          class=\"form-control\"\n          name=\"password\"\n          id=\"password\"\n          placeholder=\"password\"\n        />\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Log In</button>\n    </fieldset>\n  </form>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { ValidateService } from './services/validate.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthService } from './services/auth.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuardService } from './services/auth-guard.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n  ],\n  providers: [ValidateService, AuthService, AuthGuardService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  // tslint:disable-next-line:typedef\n  validateRegister(user) {\n    if (user.name === undefined || user.username === undefined || user.email === undefined || user.password === undefined){\n     // console.log(user);\n      return false;\n    } else  {\n      return  true;\n    }\n  }\n\n  // tslint:disable-next-line:typedef\n  validateEmail(email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\nimport { AuthGuardService } from '../../services/auth-guard.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  constructor(\n    private auth: AuthService,\n    private flash: FlashMessagesService,\n    private router: Router,\n    public authGuard: AuthGuardService\n  ) {}\n\n  ngOnInit(): void {}\n  onLogoutClick(): any {\n    this.auth.logout();\n    this.flash.show('You are logged out', {\n      cssClass: 'alert-success',\n      timeout: 3000,\n    });\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","<nav class=\"navbar navbar-default navbar-expand-lg navbar-dark bg-primary\">\n  <a class=\"navbar-brand\" href=\"#\">MEAN Auth App</a>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    data-toggle=\"collapse\"\n    data-target=\"#navbarColor01\"\n    aria-controls=\"navbarColor01\"\n    aria-expanded=\"false\"\n    aria-label=\"Toggle navigation\"\n  >\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarColor01\">\n    <ul class=\"navbar-nav mr-auto navbar-left\">\n      <li\n        class=\"nav-item\"\n        [routerLinkActive]=\"['active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" [routerLink]=\"['/']\">Home </a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav mr-right navbar-right\">\n      <li\n        *ngIf=\"this.authGuard.displayFunc()\"\n        class=\"nav-item\"\n        [routerLinkActive]=\"['active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n      </li>\n      <li\n        *ngIf=\"this.authGuard.displayFunc()\"\n        class=\"nav-item\"\n        [routerLinkActive]=\"['active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n      </li>\n      <li\n        *ngIf=\"!this.authGuard.displayFunc()\"\n        class=\"nav-item\"\n        [routerLinkActive]=\"['active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n      </li>\n      <li\n        *ngIf=\"!this.authGuard.displayFunc()\"\n        class=\"nav-item\"\n        [routerLinkActive]=\"['active']\"\n        [routerLinkActiveOptions]=\"{ exact: true }\"\n      >\n        <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n      </li>\n      <li class=\"nav-item\" *ngIf=\"this.authGuard.displayFunc()\">\n        <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) {}\n\n  // tslint:disable-next-line:typedef\n  registerUser(user): any {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post('users/register', user, { headers }).pipe(\n      map((res) => {\n        //  console.log(res);\n        return res;\n      })\n    );\n  }\n\n  loginUser(user): any {\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.post('users/authenticate', user, { headers }).pipe(\n      map((res) => {\n        // console.log(res);\n        return res;\n      })\n    );\n  }\n\n  getProfile(): any {\n    this.loadToken();\n    const options = {\n      headers: new HttpHeaders({ Authorization: `${this.authToken}` }),\n    };\n    // console.log(this.authToken);\n    // console.log(options);\n    return this.http.get('users/profile', options).pipe(\n      map((res) => {\n        //  console.log(res);\n        return res;\n      })\n    );\n  }\n\n  // tslint:disable-next-line:typedef\n  loadToken() {\n    this.authToken = localStorage.getItem('id_token');\n    // console.log(this.authToken);\n  }\n\n  storeUserData(token, user): any {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  logout(): any {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { RouteGuard } from './services/route-gaurd.service';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'register',\n    component: RegisterComponent,\n  },\n  { path: 'login', component: LoginComponent },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [RouteGuard],\n  },\n  { path: 'profile', component: ProfileComponent, canActivate: [RouteGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}